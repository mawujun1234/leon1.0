#---------------\u914d\u7f6e\u65e5\u5fd7\u8f93\u51fa\u7684\u5730\u65b9\uff0c\u8fd9\u91cc\u914d\u7f6e\u4e86\u4e24\u4e2a
#Log4J\u914d\u7f6e\u6587\u4ef6\u5b9e\u73b0\u4e86\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u6587\u4ef6\uff0c\u56de\u6eda\u6587\u4ef6\uff0c\u53d1\u9001\u65e5\u5fd7\u90ae\u4ef6\uff0c\u8f93\u51fa\u5230\u6570\u636e\u5e93
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
#\u5bf9\u8f93\u51fa\u5230\u67d0\u4e2aapender\u7684\u65e5\u5fd7\u8fdb\u884c\u683c\u5f0f\u5316
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
##\u5bf9\u8f93\u51fa\u5230\u67d0\u4e2aapender\u7684\u65e5\u5fd7\u8fdb\u884c\u683c\u5f0f\u5316
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

########################################################################################

### set log levels - for more verbose logging change 'info' to 'debug' ###
#\u6307\u5b9a\u65e5\u5fd7\u4fe1\u606f\u8f93\u51fa\u5230\u54ea\u4e2a\u5730\u65b9\u3002\u60a8\u53ef\u4ee5\u540c\u65f6\u6307\u5b9a\u591a\u4e2a\u8f93\u51fa\u76ee\u7684\u5730\u3002
#DEBUG < INFO < WARN < ERROR < FATAL
log4j.rootLogger=debug, stdout,file

##########################################################################################
#hibernate\u914d\u7f6e
#\u5728\u6240\u6709 SQL DML \u8bed\u53e5\u88ab\u6267\u884c\u65f6\u4e3a\u5b83\u4eec\u8bb0\u5f55\u65e5\u5fd7
log4j.logger.org.hibernate.SQL=debug
log4j.logger.org.hibernate.engine.query=debug
#\u4e3a\u6240\u6709 JDBC \u53c2\u6570\u8bb0\u5f55\u65e5\u5fd7
log4j.logger.org.hibernate.type=debug
#\u4e3a\u6240\u6709 JDBC \u8d44\u6e90\u7684\u83b7\u53d6\u8bb0\u5f55\u65e5\u5fd7
log4j.logger.org.hibernate.jdbc=debug
#\u4e3a\u4e8b\u52a1\u76f8\u5173\u7684\u6d3b\u52a8\u8bb0\u5f55\u65e5\u5fd7
log4j.logger.org.hibernate.transaction=debug
#\u4e3a\u6240\u6709\u4e8c\u7ea7\u7f13\u5b58\u7684\u6d3b\u52a8\u8bb0\u5f55\u65e5\u5fd7
log4j.logger.org.hibernate.cache=debug
#\u5728 session \u6e05\u6d17\uff08flush\uff09\u65f6\uff0c\u4e3a\u6240\u6709\u4e0e\u5176\u5173\u8054\u7684\u5b9e\u4f53\uff08\u6700\u591a 20 \u4e2a\uff09\u7684\u72b6\u6001\u8bb0\u5f55\u65e5\u5fd7
log4j.logger.org.hibernate.pretty=debug
#\u5728\u6240\u6709 SQL DDL \u8bed\u53e5\u6267\u884c\u65f6\u4e3a\u5b83\u4eec\u8bb0\u5f55\u65e5\u5fd7
#trace\u503c\u4e5f\u53ef\u4ee5
log4j.logger.org.hibernate.tool.hbm2ddl=debug
#\u4e3a\u4efb\u4f55 Hibernate \u76f8\u5173\u4fe1\u606f\u8bb0\u5f55\u65e5\u5fd7\uff08\u4fe1\u606f\u91cf\u8f83\u5927\uff0c\u4f46\u5bf9\u67e5\u9519\u975e\u5e38\u6709\u5e2e\u52a9\uff09
log4j.logger.org.hibernate=debug

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
##############################################################################################

#mybatis logger config 
log4j.logger.com.ibatis=info
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=info 
log4j.logger.org.apache.ibatis.jdbc.ScriptRunner=info 
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=info 
log4j.logger.java.sql.Connection=info 
log4j.logger.java.sql.Statement=info 
log4j.logger.java.sql.PreparedStatement=info
#################################################################################################



#!==============================================================================
#! log4j.properties - An example configuration properties file for log4j.
#!
#! Logging levels are:
#! DEBUG < INFO < WARN < ERROR < FATAL
#!==============================================================================
#
#! turn on the internal log4j debugging flag so we can see what it is doing
#log4j.debug=true
#
#!==============================================================================
#! JDBC API layer call logging :
#! INFO shows logging, DEBUG also shows where in code the jdbc calls were made,
#! setting DEBUG to true might cause minor slow-down in some environments.
#! If you experience too much slowness, use INFO instead.
#
#! Log all JDBC calls except for ResultSet calls
#log4j.logger.jdbc.audit=INFO,jdbc
#log4j.additivity.jdbc.audit=false
#
#! Log only JDBC calls to ResultSet objects
#log4j.logger.jdbc.resultset=OFF
#log4j.additivity.jdbc.resultset=false
#
#! Log only the SQL that is executed.
#log4j.logger.jdbc.sqlonly=DEBUG,sql
#log4j.additivity.jdbc.sqlonly=false
#
#! Log timing information about the SQL that is executed.
#log4j.logger.jdbc.sqltiming=DEBUG,sqltiming
#log4j.additivity.jdbc.sqltiming=false
#
#! Log connection open/close events and connection number dump
#log4j.logger.jdbc.connection=FATAL,connection
#log4j.additivity.jdbc.connection=false
#
#! the appender used for the JDBC API layer call logging above, sql only
#log4j.appender.sql=org.apache.log4j.ConsoleAppender
#log4j.appender.sql.layout=org.apache.log4j.PatternLayout
#log4j.appender.sql.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n
#
#
#! the appender used for the JDBC API layer call logging above, sql timing
#log4j.appender.sqltiming=org.apache.log4j.ConsoleAppender
#log4j.appender.sqltiming.layout=org.apache.log4j.PatternLayout
#log4j.appender.sqltiming.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n
#
#! the appender used for the JDBC API layer call logging above
#log4j.appender.jdbc=org.apache.log4j.ConsoleAppender
#log4j.appender.jdbc.layout=org.apache.log4j.PatternLayout
#log4j.appender.jdbc.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
#
#! the appender used for the JDBC Connection open and close events
#log4j.appender.connection=org.apache.log4j.ConsoleAppender
#log4j.appender.connection.layout=org.apache.log4j.PatternLayout
#log4j.appender.connection.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n


#! the appender used for the JDBC API layer call logging above, sql only
#log4j.appender.sql=org.apache.log4j.FileAppender
#log4j.appender.sql.File=./logs/sql.log
#log4j.appender.sql.Append=false
#log4j.appender.sql.layout=org.apache.log4j.PatternLayout
#log4j.appender.sql.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n
#
#! the appender used for the JDBC API layer call logging above, sql timing
#log4j.appender.sqltiming=org.apache.log4j.FileAppender
#log4j.appender.sqltiming.File=./logs/sqltiming.log
#log4j.appender.sqltiming.Append=false
#log4j.appender.sqltiming.layout=org.apache.log4j.PatternLayout
#log4j.appender.sqltiming.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n
#
#! the appender used for the JDBC API layer call logging above
#log4j.appender.jdbc=org.apache.log4j.FileAppender
#log4j.appender.jdbc.File=./logs/jdbc.log
#log4j.appender.jdbc.Append=false
#log4j.appender.jdbc.layout=org.apache.log4j.PatternLayout
#log4j.appender.jdbc.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
#
#! the appender used for the JDBC Connection open and close events
#log4j.appender.connection=org.apache.log4j.FileAppender
#log4j.appender.connection.File=./logs/connection.log
#log4j.appender.connection.Append=false
#log4j.appender.connection.layout=org.apache.log4j.PatternLayout
#log4j.appender.connection.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n





