需要确认的问题：领域模型使用数据库结构，还是使用关联的方式。
	在grid展现的时候，需要展现关联数据的名称，这个时候怎么办？
	form的话，可以直接通过_id来获取到啊
	方案一：使用数据库结构更简单啊，直接从数据库一直到展现层就可以了，关联数据的获取，通过重新查询或者写sql来达到目的，获取单个对象的时候，常常需要重组
	方案二：在领域层使用领域模型,但当把领域模型传递到前台的界面的时候，就转换为数据库模型Contact的name属性就变成contact_id(属性_属性),还要获取name呢，那也转换为contact_name
		如果是前端到ontroller，那就反过来做，自动代码生成也改成这样
		
Cnd类，添加count，max等方法,集成hibernateDao等,。类似于Cnd.count().andGT("age", 20)

=======================================================
数据库名都用小写，类似于@Table(name="leon_user")，@Table(name="leon_switchuser")
并且在xml中写sql的时候的表名也都用小写
==================================================================
打开h2数据库的开发环境的时候地址填写
  因为是使用h2的文件形式，所以要指定文件jdbc:h2:file:E:\eclipse\workspace\leon\leon-web-common\leon;AUTO_SERVER=TRUE，具体查看“a总括.docx
数据初始化的sql的script是在db文件夹下面的，如何导出script请看h2介绍的章节
  
==============================================================================
持久层开发
    继承IRepository,例如MenuItemRepository，如果需要自己写sql，就再创建一个mybatis文件和MenuItemRepository同名，MenuItemRepository.xml注意里面的namespace就是MenuItemRepository的全
    限定类名。
    如果默认的方法不满足你的使用，就在MenuItemRepository这个借口类里面顶一个方法，同时在xml文件中定义一个同名的statement就可以了
    在构建mybatis的map类型参数的时候，可以使用Params进行参数的初始化。
     Params params=Params.init().put("parameterId", parameterId).put("subjectType", subjectType);
======================================================================================= 
service层开发
    只需要继承AbstractService就可以了。
  
  
========================================================================================
领域层
             所有类要继承IdEntity或其子类
    Boolean字段使用    @org.hibernate.annotations.Type(type="yes_no"),数据库存储为Y或N,用Y和N来替代true或false，mybatis查询的时候也是这么处理的
             基本类型都使用包装类，例如int使用Integer，float使用Float
            枚举类型要加上@Enumerated(EnumType.STRING)
   @Table(name="sys_userstore",uniqueConstraints = {@UniqueConstraint(columnNames={"month", "day"})})
生成领域模型属性和表的列名快速引用类的maven命令
	com.mawujun:leon-maven-plugin:0.0.1-SNAPSHOT:generateMT
	每次修改了领域模型的java类后，都必须重新生成下这个类
	限制：现在属性名和列名还是相同的，关联类的id必须为xxx.id，还没有具体的做过
访问实体的属性名的类为M
	引用方法就是M.MenuItem.id,M.MenuItem.name
	访问关联类的id分为hql为：M.MenuItem。menu_id
访问表的字段名的类为T
	引用方法就是T.MenuItem.id,T.MenuItem.name
	访问关联类的id分为hql为：T.MenuItem。menu_id
访问参数id的类是P
     生成方法是com.mawujun:leon-maven-plugin:0.0.1-SNAPSHOT:generateP
   注意要在leon-web-common的pom上要配实际的数据库驱动和地址
   

========================================
分页查询的时候，如果要使用自动分页的话，就使用匹配queryPage的模式	
Cnd的快速插入，更新，查询

=========================================
代码生成
    使用com.mawujun.generator下面额generatorMain类
    com.mawujun:leon-maven-plugin:0.0.1-SNAPSHOT:generateM 生成M,T类的maven命令
    com.mawujun:leon-maven-plugin:0.0.1-SNAPSHOT:generateP，生成P类的maven命令
    
    
常用工具类===========================================
DefaultValue   
	系统的默认值得引用，例如默认的菜单id
ParameterHolder类
	用来获取在某个主体上的参数值，如果是用户的话，先从用户上取参数值，如果没有，再层层递归，用户--》职位--》组织单元---》用户组---》角色---系统，会依次判断有没有值，直到获取到 有值得 
	JavaBeanDataSource是用来动态获取参数的数据源的
	使用方式String menuId=ParameterHolder.getUserParameterValue(user.getId(), P.menuId);
	
界面元素权限控制===================================================
hidden:!checkPermission(funId)控制按钮的展现还是隐藏，checkPermission是检查用户是否具有这个功能权限的



