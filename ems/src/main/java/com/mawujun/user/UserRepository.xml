<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mawujun qq:16064988 e-mail:16064988@qq.com 承接各种项目 -->
<!-- 注意文件名称为:Example_${DbName}_Mapper.xml-->
<mapper namespace="com.mawujun.user.UserRepository">
	
	<select id="queryPage" resultType="com.mawujun.user.User" parameterType="map">
    	SELECT a.*
	    FROM sys_user a
	    where 1=1
	    <if test="name!=null">
	    	and a.name like #{name} or a.username like #{name}
	    </if>
		
    </select>
    
	<select id="getByUsername" parameterType="string" resultType="com.mawujun.user.User">
		select * from sys_user where username=#{username} and status='Y'
	</select>
	<select id="findPermissions" parameterType="string" resultType="string">
		select distinct d.link from sys_funrole_user a,sys_user b,sys_navigation_funrole c,sys_navigation d
		where  c.navigation_id=d.id and c.funrole_id=a.funrole_id
		and a.user_id=b.id and b.username=#{username}
	</select>
	
	<select id="list" parameterType="string" resultType="com.mawujun.user.User">
		select * from sys_user
	</select>

	<update id="update">
		update sys_user set name=#{name},phone=#{phone,jdbcType=VARCHAR} where id=#{id}
	</update>

	<insert id="save" parameterType="com.mawujun.user.User">
		insert into sys_user(id,username,password,name,phone) values(#{id},#{username},#{password,jdbcType=VARCHAR},#{name},#{phone,jdbcType=VARCHAR})
	</insert>

	<delete id="delete">
		delete sys_user where id=#{id}
	</delete>
	<update id="changePwd">
		update sys_user set password=#{password_new} where username=#{username} and password=${password_old}
	</update>


	<select id="listFunRole" parameterType="map" resultType="com.mawujun.user.FunRole">
		select a.* ,decode(a.leaf,'Y',decode(b.funrole_id,null,'N','Y'),null) as checked
		from sys_funrole a left join sys_funrole_user b
		on a.id=b.funrole_id and b.user_id=#{user_id}
		where
		<choose>
			<when test="parentId!=null">
				 a.parentid=#{parentId}
			</when>
			<otherwise>
				 a.parentid is null
			</otherwise>
		</choose>
	</select>
	<insert id="checkedFunRole" parameterType="map">
		insert into sys_funrole_user(user_id,funRole_id) values(#{user_id},#{funRole_id})
	</insert>

	<delete id="unCheckedFunRole">
		delete sys_funrole_user where user_id=#{user_id} and funRole_id=#{funRole_id}
	</delete>
	<select id="selectAllCheckedFunRole" parameterType="string" resultType="string">
		select funRole_id from sys_funrole_user where user_id=#{user_id} 
	</select>

	<delete id="deleteAllFunRole">
		delete sys_funrole_user where  user_id=#{user_id} 
	</delete>
	
	
	<!-- 
	<select id="listDataRole" parameterType="map" resultType="com.mawujun.user.DataRole">
		select a.* ,decode(a.leaf,'Y',decode(b.DataRole_id,null,'N','Y'),null) as checked
		from sys_DataRole a left join sys_DataRole_user b
		on a.id=b.DataRole_id and b.user_id=#{user_id}
		where
		<choose>
			<when test="parentId!=null">
				 a.parentid=#{parentId}
			</when>
			<otherwise>
				 a.parentid is null
			</otherwise>
		</choose>
	</select>
	<insert id="checkedDataRole" parameterType="map">
		insert into sys_DataRole_user(user_id,DataRole_id) values(#{user_id},#{dataRole_id})
	</insert>

	<delete id="unCheckedDataRole">
		delete sys_DataRole_user where user_id=#{user_id} and DataRole_id=#{dataRole_id}
	</delete>
	<select id="selectAllCheckedDataRole" parameterType="string" resultType="string">
		select DataRole_id from sys_DataRole_user where user_id=#{user_id} 
	</select>

	<delete id="deleteAllDataRole">
		delete sys_DataRole_user where  user_id=#{user_id} 
	</delete>
	 -->
	
	
	<select id="listUserByFunRole" parameterType="String" resultType="com.mawujun.user.User">
		select a.* 
		from sys_user a inner join sys_funrole_user b
		on a.id=b.user_id 
		where
		 b.funrole_id=#{funrole_id}
	</select>
	
	<select id="selectAllCheckedStore" parameterType="String" resultType="com.mawujun.user.UserStore">
		select a.user_id,a.look,a.edit ,b.name as store_name,b.status as store_status,b.type as store_type,b.id as store_id
		from sys_userstore a right join ems_store b
		on a.store_id=b.id 
		and
		a.user_id=#{user_id}
	</select>
	<!-- 检查某个用书是否具有 编辑 仓库的去权限-->
	<select id="check_edit_store_permission" resultType="int">
		select count(*) from sys_userstore where user_id=#{user_id} and store_id=#{store_id} and edit='Y'
	</select>
</mapper>